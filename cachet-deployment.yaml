apiVersion: apps/v1
kind: Deployment     
metadata:
  labels:
    component: cachet           
  name: cachet
  namespace: default    
spec:                
  replicas: 1       
  selector:
    matchLabels:
      component: cachet
  template:           
    metadata:                                                                                           
      creationTimestamp: null
      labels:
        component: cachet                            
    spec:
      containers:
      - env:
        - name: APP_KEY
          value : base64:B4imLLFwTu0ebD3WJhjddkfQn1rILDIf+XNbbW+Z4cs=
          #valueFrom:
            #secretKeyRef:
              #name: cachet-secret
              #key: APP_KEY
        - name: APP_LOG
          value: errorlog
        - name: APP_DEBUG
          value: "false"
        - name: DB_DRIVER
          valueFrom:
            secretKeyRef:
              name: cachet-secret
              key: DB_DRIVER
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: cachet-secret
              key: DB_HOST
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: cachet-secret
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: cachet-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cachet-secret
              key: DB_PASSWORD
        - name: DB_PORT
          value: "5432"
        - name: DB_PREFIX
          value: chq_
        - name: DEBUG
          value: "false"
        - name: SESSION_DRIVER
          value: file
        - name: CACHE_DRIVER
          value: database
        - name: QUEUE_DRIVER
          value: database
        image: cachethq/docker:2.3.15
        #image: cachethq/docker:latest
        #========================================
        # https://docs.cachethq.io/docs/base-url
        # kubectl exec -it cachet-6555fd57c8-njvx2 /bin/bash -n default
        # cd /var/www/html
        # ## php artisan key:generate
        # php artisan app:install
        # Get key and set APP_ENV in pod
        # APP_ENV=base64:base64:zkC1AQuZdj8xqqIi4IIWkKrlPiw8QlfaRQAjxm9ZN8c=
        #========================================
        # php artisan down
        # php artisan config:clear
        # php artisan config:cache
        # php artisan app:update
        # php artisan up
        #========================================
        # If you experience any issues when running these commands, you may need to execute the following command:
        # rm -rf bootstrap/cache/*
        # rm -rf bootstrap/cache{,t}/*
        # chmod -R 777 storage;chmod -R 777 bootstrap/;;
        #========================================

        #command: ['sh', '-c', 'cd /var/www/html;php artisan key:generate;chmod -R 777 storage;rm -rf bootstrap/cache/*;chmod -R 777 bootstrap/;rm -rf bootstrap/cache{,t}/*;php artisan config:cache;php artisan app:install;php artisan app:update;']
        name: cachet
        ports:
        - containerPort: 3000
        resources: {}
      initContainers:
      - name: init-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
        #command: ['sh']
        #command: ['sh', '-c', 'until pg_isready -h postgres -p 5432; do echo waiting for database; sleep 2; done;']
      restartPolicy: Always
status: {}
